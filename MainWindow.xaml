<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:CookieEdit2"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:fctb="clr-namespace:FastColoredTextBoxNS;assembly=FastColoredTextBox"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    x:Class="CookieEdit2.MainWindow"
    mc:Ignorable="d"
    Title="CookieEdit v2.0" Height="800" Width="1500     " BorderBrush="Black" Loaded="MainWindowControl_Loaded" Foreground="White" OpacityMask="Black" Icon="resources\icons\cookie.png" Background="#FF2E2E2E">
    <Window.Resources>
        <ContextMenu x:Key="cmButton">
            <ContextMenu.CommandBindings>
                <CommandBinding Command="Cut" Executed="CutCommand_Executed" CanExecute="CanExecute_IsTextSelected"/>
                <CommandBinding Command="Copy" Executed="CopyCommand_Executed" CanExecute="CanExecute_IsTextSelected"/>
                <CommandBinding Command="Paste" Executed="PasteCommand_Executed" CanExecute="CanExecute_True"/>
            </ContextMenu.CommandBindings>
            <MenuItem Header="Cut" Command="Cut" CommandTarget="{Binding ElementName=MainWindow}" InputGestureText="Ctrl+X"/>
            <MenuItem Header="Copy" Command="Copy" CommandTarget="{Binding ElementName=MainWindow}" InputGestureText="Ctrl+C" />
            <Separator />
            <MenuItem Header="Paste"  Command="Paste" CommandTarget="{Binding ElementName=MainWindow}" InputGestureText="Ctrl+V" />
        </ContextMenu>

        <Style x:Key="ColorPickerStyle1" TargetType="{x:Type xctk:ColorPicker}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
            <Setter Property="BorderThickness" Value="1,1,0,1"/>
            <Setter Property="ButtonStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <xctk:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}">
                                                <xctk:ButtonChrome.Visibility>
                                                    <Binding Path="ShowDropDownButton" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </xctk:ButtonChrome.Visibility>
                                                <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                    <Path x:Name="Arrow" Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Height="5" Margin="0,1,0,0" Width="9"/>
                                                </Grid>
                                            </xctk:ButtonChrome>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MaxDropDownWidth" Value="250"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                        <Grid>
                            <ToggleButton x:Name="PART_ColorPickerToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" Padding="{TemplateBinding Padding}" Style="{TemplateBinding ButtonStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ToggleButton.IsHitTestVisible>
                                    <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <xctk:InverseBoolConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </ToggleButton.IsHitTestVisible>
                                <Grid Height="23">
                                    <ContentControl x:Name="ColorOnly" VerticalContentAlignment="Top">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Border>
                                                                <Rectangle>
                                                                    <Rectangle.Fill>
                                                                        <Binding Path="SelectedColor" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                            <Binding.Converter>
                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </Rectangle.Fill>
                                                                </Rectangle>
                                                            </Border>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
                                        <StackPanel Orientation="Horizontal">
                                            <ContentControl BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" HorizontalAlignment="Left" Margin="2,1,4,1" Width="20">
                                                <ContentControl.Style>
                                                    <Style TargetType="{x:Type ContentControl}">
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <Border>
                                                                        <Border.Background>
                                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                <DrawingBrush.Drawing>
                                                                                    <DrawingGroup>
                                                                                        <GeometryDrawing Brush="White">
                                                                                            <GeometryDrawing.Geometry>
                                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                                            </GeometryDrawing.Geometry>
                                                                                        </GeometryDrawing>
                                                                                        <GeometryDrawing Brush="LightGray">
                                                                                            <GeometryDrawing.Geometry>
                                                                                                <GeometryGroup>
                                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                </GeometryGroup>
                                                                                            </GeometryDrawing.Geometry>
                                                                                        </GeometryDrawing>
                                                                                    </DrawingGroup>
                                                                                </DrawingBrush.Drawing>
                                                                            </DrawingBrush>
                                                                        </Border.Background>
                                                                        <Rectangle>
                                                                            <Rectangle.Fill>
                                                                                <Binding Path="SelectedColor" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                                    <Binding.Converter>
                                                                                        <xctk:ColorToSolidColorBrushConverter/>
                                                                                    </Binding.Converter>
                                                                                </Binding>
                                                                            </Rectangle.Fill>
                                                                        </Rectangle>
                                                                    </Border>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                            <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </ToggleButton>
                            <Popup x:Name="PART_ColorPickerPalettePopup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}" PopupAnimation="Slide" StaysOpen="False" ToolTip="" VerticalOffset="1" VerticalAlignment="Bottom" Width="{TemplateBinding MaxDropDownWidth}">
                                <Popup.Resources>
                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                        <Style.Triggers>
                                            <Trigger Property="Content" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Popup.Resources>
                                <Border BorderBrush="#FFABADB3" BorderThickness="1" Padding="3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <TabControl x:Name="ColorPickerTabControl" Background="Transparent" SelectedItem="0">
                                        <xctk:ColorPickerTabItem x:Name="AdvancedTabItem" Header="{Binding AdvancedButtonHeader, RelativeSource={RelativeSource TemplatedParent}}">
                                            <xctk:ColorPickerTabItem.Template>
                                                <ControlTemplate TargetType="{x:Type xctk:ColorPickerTabItem}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="#FFF0F0F0" Margin="0">
                                                            <Border x:Name="innerBorder" BorderBrush="#FFACACAC" BorderThickness="1,1,1,0" Background="#FFF0F0F0" Margin="-1" Opacity="0"/>
                                                        </Border>
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                                        </MultiDataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </xctk:ColorPickerTabItem.Template>
                                            <Grid x:Name="_colorCanvasHost">
                                                <Grid.Width>
                                                    <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <xctk:AdditionConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Grid.Width>
                                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                                                    <xctk:ColorCanvas BorderThickness="0" Background="Transparent" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </xctk:ColorPickerTabItem>
                                        <xctk:ColorPickerTabItem x:Name="StandardTabItem" Header="{Binding StandardButtonHeader, RelativeSource={RelativeSource TemplatedParent}}">
                                            <xctk:ColorPickerTabItem.Template>
                                                <ControlTemplate TargetType="{x:Type xctk:ColorPickerTabItem}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="#FFF0F0F0" Margin="0">
                                                            <Border x:Name="innerBorder" BorderBrush="#FFACACAC" BorderThickness="1,1,1,0" Background="#FFF0F0F0" Margin="-1" Opacity="0"/>
                                                        </Border>
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                                        </MultiDataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </xctk:ColorPickerTabItem.Template>
                                            <Grid x:Name="_colorPaletteHost" Margin="4">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="1">
                                                    <Grid.Visibility>
                                                        <TemplateBinding Property="ShowAvailableColors">
                                                            <TemplateBinding.Converter>
                                                                <BooleanToVisibilityConverter/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Grid.Visibility>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Background="AliceBlue" Margin="0,0,0,1" Padding="2" Text="{TemplateBinding AvailableColorsHeader}"/>
                                                        <ListBox x:Name="PART_AvailableColors" Grid.Row="1">
                                                            <ListBox.Style>
                                                                <Style TargetType="{x:Type ListBox}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="MaxHeight" Value="500"/>
                                                                    <Setter Property="Width">
                                                                        <Setter.Value>
                                                                            <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                                <Binding.Converter>
                                                                                    <xctk:AdditionConverter/>
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel IsItemsHost="True">
                                                                                    <WrapPanel.Width>
                                                                                        <Binding ConverterParameter="-4" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}">
                                                                                            <Binding.Converter>
                                                                                                <xctk:AdditionConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </WrapPanel.Width>
                                                                                </WrapPanel>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemContainerStyle">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                            <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                                <Grid.Resources>
                                                                                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                                        <Style.Triggers>
                                                                                                            <Trigger Property="Content" Value="">
                                                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                            </Trigger>
                                                                                                        </Style.Triggers>
                                                                                                    </Style>
                                                                                                </Grid.Resources>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                                </Border>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                </Trigger>
                                                                                                <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                                    <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                                </DataTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                                        <Border.Background>
                                                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                                <DrawingBrush.Drawing>
                                                                                                    <DrawingGroup>
                                                                                                        <GeometryDrawing Brush="White">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                        <GeometryDrawing Brush="LightGray">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <GeometryGroup>
                                                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                                </GeometryGroup>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                    </DrawingGroup>
                                                                                                </DrawingBrush.Drawing>
                                                                                            </DrawingBrush>
                                                                                        </Border.Background>
                                                                                        <Rectangle Height="14" Width="14">
                                                                                            <Rectangle.Style>
                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                    <Setter Property="Fill">
                                                                                                        <Setter.Value>
                                                                                                            <Binding Path="Color">
                                                                                                                <Binding.Converter>
                                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                                </Binding.Converter>
                                                                                                            </Binding>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Rectangle.Style>
                                                                                        </Rectangle>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                                </Style>
                                                            </ListBox.Style>
                                                        </ListBox>
                                                    </Grid>
                                                </Grid>
                                                <Grid Grid.Row="2">
                                                    <Grid.Visibility>
                                                        <TemplateBinding Property="ShowStandardColors">
                                                            <TemplateBinding.Converter>
                                                                <BooleanToVisibilityConverter/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Grid.Visibility>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Background="AliceBlue" Margin="0,1" Padding="2" Text="{TemplateBinding StandardColorsHeader}"/>
                                                        <ListBox x:Name="PART_StandardColors" Grid.Row="1">
                                                            <ListBox.Style>
                                                                <Style TargetType="{x:Type ListBox}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="MaxHeight" Value="500"/>
                                                                    <Setter Property="Width">
                                                                        <Setter.Value>
                                                                            <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                                <Binding.Converter>
                                                                                    <xctk:AdditionConverter/>
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel IsItemsHost="True">
                                                                                    <WrapPanel.Width>
                                                                                        <Binding ConverterParameter="-4" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}">
                                                                                            <Binding.Converter>
                                                                                                <xctk:AdditionConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </WrapPanel.Width>
                                                                                </WrapPanel>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemContainerStyle">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                            <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                                <Grid.Resources>
                                                                                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                                        <Style.Triggers>
                                                                                                            <Trigger Property="Content" Value="">
                                                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                            </Trigger>
                                                                                                        </Style.Triggers>
                                                                                                    </Style>
                                                                                                </Grid.Resources>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                                </Border>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                </Trigger>
                                                                                                <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                                    <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                                </DataTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                                        <Border.Background>
                                                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                                <DrawingBrush.Drawing>
                                                                                                    <DrawingGroup>
                                                                                                        <GeometryDrawing Brush="White">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                        <GeometryDrawing Brush="LightGray">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <GeometryGroup>
                                                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                                </GeometryGroup>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                    </DrawingGroup>
                                                                                                </DrawingBrush.Drawing>
                                                                                            </DrawingBrush>
                                                                                        </Border.Background>
                                                                                        <Rectangle Height="14" Width="14">
                                                                                            <Rectangle.Style>
                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                    <Setter Property="Fill">
                                                                                                        <Setter.Value>
                                                                                                            <Binding Path="Color">
                                                                                                                <Binding.Converter>
                                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                                </Binding.Converter>
                                                                                                            </Binding>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Rectangle.Style>
                                                                                        </Rectangle>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                                </Style>
                                                            </ListBox.Style>
                                                        </ListBox>
                                                    </Grid>
                                                </Grid>
                                                <Grid Margin="0,1" Grid.Row="3">
                                                    <Grid.Visibility>
                                                        <TemplateBinding Property="ShowRecentColors">
                                                            <TemplateBinding.Converter>
                                                                <BooleanToVisibilityConverter/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Grid.Visibility>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="22"/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Background="AliceBlue" Margin="0,1" Padding="2" Text="{TemplateBinding RecentColorsHeader}"/>
                                                        <ListBox x:Name="PART_RecentColors" Grid.Row="1">
                                                            <ListBox.Style>
                                                                <Style TargetType="{x:Type ListBox}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="MaxHeight" Value="500"/>
                                                                    <Setter Property="Width">
                                                                        <Setter.Value>
                                                                            <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                                <Binding.Converter>
                                                                                    <xctk:AdditionConverter/>
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel IsItemsHost="True">
                                                                                    <WrapPanel.Width>
                                                                                        <Binding ConverterParameter="-4" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}">
                                                                                            <Binding.Converter>
                                                                                                <xctk:AdditionConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </WrapPanel.Width>
                                                                                </WrapPanel>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemContainerStyle">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                            <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                                <Grid.Resources>
                                                                                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                                        <Style.Triggers>
                                                                                                            <Trigger Property="Content" Value="">
                                                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                            </Trigger>
                                                                                                        </Style.Triggers>
                                                                                                    </Style>
                                                                                                </Grid.Resources>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                                </Border>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                </Trigger>
                                                                                                <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                                    <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                                </DataTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                                        <Border.Background>
                                                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                                <DrawingBrush.Drawing>
                                                                                                    <DrawingGroup>
                                                                                                        <GeometryDrawing Brush="White">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                        <GeometryDrawing Brush="LightGray">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <GeometryGroup>
                                                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                                </GeometryGroup>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                    </DrawingGroup>
                                                                                                </DrawingBrush.Drawing>
                                                                                            </DrawingBrush>
                                                                                        </Border.Background>
                                                                                        <Rectangle Height="14" Width="14">
                                                                                            <Rectangle.Style>
                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                    <Setter Property="Fill">
                                                                                                        <Setter.Value>
                                                                                                            <Binding Path="Color">
                                                                                                                <Binding.Converter>
                                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                                </Binding.Converter>
                                                                                                            </Binding>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Rectangle.Style>
                                                                                        </Rectangle>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                                </Style>
                                                            </ListBox.Style>
                                                        </ListBox>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </xctk:ColorPickerTabItem>
                                    </TabControl>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="DisplayColorAndName" Value="True">
                                <Setter Property="Visibility" TargetName="ColorOnly" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="ColorAndName" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ShowTabHeaders" Value="False">
                                <Setter Property="Visibility" TargetName="StandardTabItem" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="AdvancedTabItem" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ShowDropDownButton" Value="False">
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="New"    CanExecute="CanExecute_True"           Executed="NewCommand_Executed" />
        <CommandBinding Command="Open"   CanExecute="CanExecute_True"           Executed="OpenCommand_Executed" />
        <CommandBinding Command="Save"   CanExecute="CanExecute_True"           Executed="SaveCommand_Executed" />
        <CommandBinding Command="SaveAs" CanExecute="CanExecute_True"           Executed="SaveAsCommand_Executed" />
        <CommandBinding Command="Undo"   CanExecute="CanExecute_True"           Executed="UndoCommand_Executed" />
        <CommandBinding Command="Redo"   CanExecute="CanExecute_True"           Executed="RedoCommand_Executed" />
        <CommandBinding Command="Cut"    CanExecute="CanExecute_IsTextSelected" Executed="CutCommand_Executed" />
        <CommandBinding Command="Copy"   CanExecute="CanExecute_IsTextSelected" Executed="CopyCommand_Executed" />
        <CommandBinding Command="Paste"  CanExecute="CanExecute_True"           Executed="PasteCommand_Executed" />
        <CommandBinding Command="Find"   CanExecute="CanExecute_True"           Executed="FindCommand_Executed" />
        <!--<CommandBinding Command="FindAndReplace"  CanExecute="CanExecute_True"  Executed="FindReplaceCommand_Executed" />
        <CommandBinding Command="Format"  CanExecute="CanExecute_True"          Executed="FormatCommand_Executed" />-->

    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="SaveAs"/>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="New"/>
    </Window.InputBindings>

    <DockPanel>

        <!--Dock TOP-->
        <Border DockPanel.Dock="Top" Margin="0" Height="21" BorderThickness="0,0,0,1" BorderBrush="Black">
            <Menu >

                <MenuItem Header="_File">
                    <MenuItem Header="_New" Command="New" InputGestureText="Ctrl+N"/>
                    <MenuItem x:Name="menu_OpenItem" Header="_Open" Command="Open"/>
                    <MenuItem Header="_Save" Command="Save" InputGestureText="Ctrl+S"/>
                    <MenuItem Header="S_ave As" Command="SaveAs" InputGestureText="Ctrl+Shift+S"/>
                    <Separator Style="{DynamicResource SubMenuSeperator}" Background="#FF1D4C63"/>
                    <MenuItem Header="_Quit" />
                </MenuItem>

                <MenuItem Header="_Edit">
                    <MenuItem Header="_Undo" Command="Undo"/>
                    <MenuItem Header="_Redo" Command="Redo"/>
                    <Separator Style="{DynamicResource SubMenuSeperator}" Background="#FF1D4C63"/>
                    <MenuItem Header="_Cut" Command="Cut"/>
                    <MenuItem Header="_Copy" Command="Copy"/>
                    <MenuItem Header="_Paste" Command="Paste"/>
                    <Separator Style="{DynamicResource SubMenuSeperator}" Background="#FF1D4C63"/>
                    <MenuItem Header="_Find" Command="Find"/>
                    <MenuItem Header="_Find/Replace" />
                    <MenuItem Header="_Reformat" />
                </MenuItem>

                <MenuItem Header="_SerialIO" >
                    <MenuItem Header="_Quick Send"/>
                    <MenuItem Header="_Active Machine" />
                    <MenuItem Header="_Open GUI" />
                </MenuItem>

                <MenuItem Header="Macro Variables">
                    <MenuItem Header="_Open GUI"  Click="OpenMacroGUIMenuItem_Click" />
                </MenuItem>

            </Menu>
        </Border>
        <StatusBar DockPanel.Dock="Bottom" BorderBrush="Black" Background="{StaticResource MenuBackgroundBrush}" Foreground="{StaticResource MenuTextColor}" Margin="0" BorderThickness="0,1,0,0">
            <TextBlock/>
        </StatusBar>

        <Grid x:Name="MainGrid"  >

            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="grid_left" Width="1*"/>
                <ColumnDefinition x:Name="grid_right"  Width="2*"/>
            </Grid.ColumnDefinitions>

            <DockPanel>
                <DockPanel DockPanel.Dock="Top">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <Button Style="{StaticResource toolbarButtonStyle}" BorderBrush="Black" Click="OpenButton_Click">
                            <Image  Width="15" Height="15" Source="/resources/icons/24x24/folder.png"/>
                        </Button>
                        <Button x:Name="SaveButton" Style="{StaticResource toolbarButtonStyle}" BorderBrush="Black" Click="SaveButtonClicked">
                            <Image  Width="15" Height="15" Source="/resources/icons/24x24/save.png"/>
                        </Button>
                        <Button Style="{StaticResource toolbarButtonStyle}" BorderBrush="Black">
                            <Image  Width="15" Height="15" Source="/resources/icons/24x24/delete.png"/>
                        </Button>
                        <Button Style="{StaticResource toolbarButtonStyle}" BorderBrush="Black" Click="OpenMacroGUIMenuItem_Click">
                            <Image  Width="15" Height="15" Source="/resources/icons/24x24/Sum.png"/>
                        </Button>
                        <Button Style="{StaticResource toolbarButtonStyle}" Click="CalcToolbarButton_Click">

                            <Image  Width="15" Height="15" Source="/resources/icons/24x24/Calculator.png"/>
                        </Button>
                        <Button Style="{StaticResource toolbarButtonStyle}" Click="ExpToolbarButton_Click">
                            <Image  Width="15" Height="15" Source="/resources/icons/24x24/Alien.png"/>
                        </Button>

                    </StackPanel>

                    <Button Style="{StaticResource toolbarButtonStyle}" Click="Toggle3DToolbarButton_Click" HorizontalAlignment="Right">
                        <Image  Width="15" Height="15" Source="/resources/icons/24x24/Zoom.png"/>
                    </Button>
                </DockPanel>


                <WindowsFormsHost x:Name="FCTBHost" Foreground="#FFD1D1D1" FontFamily="Consolas" FontSize="14" Background="#FF2E2E2E" Margin="0,0,1,0" >
                    <fctb:FastColoredTextBox x:Name="fctb" 
                        Multiline="True" RightBracket="]" 
                        RightBracket2=")" LeftBracket="[" 
                        LeftBracket2="(" 
                        Hotkeys="Tab=IndentIncrease, Escape=ClearHints,                          PgUp=GoPageUp, PgDn=GoPageDown, End=GoEnd,                          Home=GoHome, Left=GoLeft, Up=GoUp, Right=GoRight,                          Down=GoDown, Ins=ReplaceMode, Del=DeleteCharRight,                          F3=FindNext, Shift+Tab=IndentDecrease, Shift+PgUp=GoPageUpWithSelection,                          Shift+PgDn=GoPageDownWithSelection, Shift+End=GoEndWithSelection,                          Shift+Home=GoHomeWithSelection, Shift+Left=GoLeftWithSelection,                          Shift+Up=GoUpWithSelection, Shift+Right=GoRightWithSelection,                          Shift+Down=GoDownWithSelection, Shift+Ins=Paste, Shift+Del=Cut,                          Ctrl+Back=ClearWordLeft, Ctrl+Space=AutocompleteMenu,                          Ctrl+End=GoLastLine, Ctrl+Home=GoFirstLine, Ctrl+Left=GoWordLeft,                          Ctrl+Up=ScrollUp, Ctrl+Right=GoWordRight, Ctrl+Down=ScrollDown ,                          Ctrl+Ins=Copy, Ctrl+Del=ClearWordRight, Ctrl+0=ZoomNormal,                          Ctrl+A=SelectAll, Ctrl+B=BookmarkLine, Ctrl+C=Copy,                          Ctrl+E=MacroExecute, Ctrl+F=FindDialog, Ctrl+G=GoToDialog,                          Ctrl+H=ReplaceDialog, Ctrl+I=AutoIndentChars, Ctrl+M=MacroRecord,                          Ctrl+N=GoNextBookmark, Ctrl+R=Redo, Ctrl+U=UpperCase,                          Ctrl+V=Paste, Ctrl+X=Cut, Ctrl+Z=Undo, Ctrl+Add=ZoomIn,                          Ctrl+Subtract=ZoomOut, Ctrl+OemMinus=NavigateBackward,                          Ctrl+Shift+End=GoLastLineWithSelection, Ctrl+Shift+Home=GoFirstLineWithSelection,                          Ctrl+Shift+Left=GoWordLeftWithSelection, Ctrl+Shift+Right=GoWordRightWithSelection,                          Ctrl+Shift+B=UnbookmarkLine, Ctrl+Shift+C=CommentSelected,                          Ctrl+Shift+N=GoPrevBookmark, Ctrl+Shift+U=LowerCase,                          Ctrl+Shift+OemMinus=NavigateForward, Alt+Back=Undo, Alt+Up=MoveSelectedLinesUp,                         Alt+Down=MoveSelectedLinesDown, Alt+F=FindChar, Alt+Shift+Left=GoLeft_ColumnSelectionMode,                          Alt+Shift+Up=GoUp_ColumnSelectionMode, Alt+Shift+Right=GoRight_ColumnSelectionMode,                          Alt+Shift+Down=GoDown_ColumnSelectionMode" BorderStyle="None" UseWaitCursor="False" 
                        Text="G1 M1 S0 N0 X0.0 Y0.0 Z0.0 I0.0 J0.0 K0.0 (comment)" 
                        AutoSize="True"
                        AutoSizeMode="GrowAndShrink" BackColor="Black" ForeColor="White" Resize="Fctb_Resize" 
                        BookmarkColor="#b90000" CaretColor="#92d0ff" ChangedLineColor="#55ff0000" IndentBackColor="#0f141f" ServiceLinesColor="Black" PaddingBackColor="#223366"
                        SelectionColor="#ffffff" LineNumberColor="#d7e0e5" />
                </WindowsFormsHost>
            </DockPanel>

            <!--CenterDock-->

            <GridSplitter Grid.Column="1" Grid.RowSpan="1" VerticalAlignment="Stretch"
              Background="#FF255187" ShowsPreview="true" Width="2" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="-1,0,0,0" BorderBrush="Black"/>

            <DockPanel Grid.Column="1" x:Name="dp">
                <DockPanel.DataContext>
                    <local:DxViewModel/>
                </DockPanel.DataContext>

                <StackPanel x:Name="GraphicsToolbar" Orientation="Horizontal" FlowDirection="LeftToRight" DockPanel.Dock="Top" Margin="1,0,0,0" VerticalAlignment="Top">
                    <Button Style="{StaticResource toolbarButtonStyle}" Click="ToobarButton1Click" />
                    <xctk:ColorPicker x:Name="MajorColorPicker" Width="50" SelectedColor="Black"  Style="{DynamicResource ColorPickerStyle1}" SelectedColorChanged="ColorPicker_SelectedColorChanged" ColorMode="ColorCanvas"/>
                </StackPanel>

                <hx:Viewport3DX 
                    x:Name="Viewport3Dx"
                    Camera="{Binding Camera}"
                    ModelUpDirection="{Binding UpDirVectorD}"
                    ShowCoordinateSystem="True"
                    FXAALevel="Low"
                    Background="black"
                    EffectsManager="{Binding EffectsManager}"
                    EnableDesignModeRendering="True">

                    <hx:AmbientLight3D Color="Black"/>
                    <hx:ScreenQuadModel3D Texture="{Binding BackgroundTexture}" />

                    <hx:MeshGeometryModel3D 
                        Geometry="{Binding BoxMesh}" 
                        Material="{Binding MeshMaterial}" 
                        Transform="{Binding BoxTransform}"/>

                    <hx:PointLight3D>
                        <hx:PointLight3D.Position>
                            <Point3D>-10,-20,25</Point3D>
                        </hx:PointLight3D.Position>
                    </hx:PointLight3D>
                    <hx:PointLight3D Color="#2E2E2E">
                        <hx:PointLight3D.Position>
                            <Point3D>60,50,35</Point3D>
                        </hx:PointLight3D.Position>
                    </hx:PointLight3D>

                    <hx:LineGeometryModel3D 
                        DataContext="{Binding GridView}"
                        x:Name="LineGeo" 
                        Geometry="{Binding MajorGrid}" 
                        IsHitTestVisible="False"
                        Transform="{Binding Xform}"
                        Thickness="{Binding MajorGridThickness}" 
                        Color="{Binding GridColor1}"/>
                    <hx:LineGeometryModel3D 
                        DataContext="{Binding GridView}"
                        Geometry="{Binding MinorGrid}" 
                        IsHitTestVisible="False"
                        Transform="{Binding Xform}"
                        Thickness="{Binding MinorGridThickness}" 
                        Color="{Binding GridColor2}"/>



                </hx:Viewport3DX>
                <!--<d3d:SlimDXControl x:Name="SDXControl" KeyDown="x_contentControl1_KeyDown"/>-->

            </DockPanel>

            <!--<WindowsFormsHost x:Name="DXHost" Grid.Row="1" Background="DarkSlateGray" Margin="2,0,0,0" />-->

        </Grid>
    </DockPanel>


</Window>
